{"version":3,"sources":["components/Form/Form.styles.jsx","components/Form/Form.jsx","components/ContactList/ContactList.styles.jsx","components/Contact/Contact.styles.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styles.jsx","components/Filter/Filter.jsx","components/Title/Title.styles.jsx","components/Title/Title.jsx","App.styles.jsx","App.js","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","ContactForm","state","name","number","nameInputId","uuidv4","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","formReset","this","type","pattern","title","required","onChange","Component","List","ul","ContactListItem","li","ContactButton","Contact","id","onDeleteContact","onClick","ContactList","contacts","map","FilterLabel","FilterInput","Filter","Heading","h2","Title","text","FormContainer","div","App","initialContacts","filter","addContact","find","contact","toLowerCase","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","includes","visibleContacts","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.93a6ea91.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  max-width: 400px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  height: 30px;\r\n\r\n  border-radius: 4px;\r\n\r\n  border: 2px solid lightblue;\r\n\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  line-height: 1.875;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  min-width: 200px;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n\r\n  color: rgba(33, 33, 33, 1);\r\n  background-color: rgba(156, 156, 156, 1);\r\n\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  line-height: 1.875;\r\n  letter-spacing: 0.06em;\r\n\r\n  transition-property: color, background-color, box-shadow;\r\n  transition-duration: 250ms;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: rgba(245, 244, 250, 1);\r\n    background-color: rgba(33, 150, 243, 1);\r\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\r\n      0px 2px 2px rgba(0, 0, 0, 0.12);\r\n  }\r\n\r\n  & svg {\r\n    height: 24px;\r\n    width: 24px;\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { CgUserAdd } from 'react-icons/cg';\r\n\r\nimport { Form, Label, Input, Button } from './Form.styles';\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.formReset();\r\n  };\r\n\r\n  formReset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <Label>\r\n          Name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </Label>\r\n        <Label>\r\n          Number\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            value={number}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </Label>\r\n        <Button type=\"submit\">\r\n          <CgUserAdd />\r\n          Add contact\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  width: 100%;\n  max-width: 400px;\n`;\n","import styled from '@emotion/styled';\r\n\r\nexport const ContactListItem = styled.li`\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ContactButton = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-width: 150px;\r\n  padding-top: 2px;\r\n  padding-bottom: 2px;\r\n\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n\r\n  color: rgba(33, 33, 33, 1);\r\n  background-color: rgba(156, 156, 156, 1);\r\n\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  line-height: 1.875;\r\n  letter-spacing: 0.06em;\r\n\r\n  transition-property: color, background-color, box-shadow;\r\n  transition-duration: 250ms;\r\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: rgba(245, 244, 250, 1);\r\n    background-color: rgba(33, 150, 243, 1);\r\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\r\n      0px 2px 2px rgba(0, 0, 0, 0.12);\r\n  }\r\n\r\n  & svg {\r\n    height: 18px;\r\n    width: 18px;\r\n    margin-right: 5px;\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { BsTrash } from 'react-icons/bs';\r\n\r\nimport { ContactListItem, ContactButton } from './Contact.styles';\r\n\r\nconst Contact = ({ id, name, number, onDeleteContact }) => {\r\n  return (\r\n    <ContactListItem key={id}>\r\n      {name}: {number}\r\n      <ContactButton type=\"button\" onClick={() => onDeleteContact(id)}>\r\n        <BsTrash />\r\n        Delete\r\n      </ContactButton>\r\n    </ContactListItem>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import PropTypes from 'prop-types';\n\nimport { List } from './ContactList.styles';\n\nimport Contact from '../Contact';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <Contact\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  max-width: 400px;\n  margin-bottom: 15px;\n`;\n\nexport const FilterInput = styled.input`\n  height: 30px;\n\n  border-radius: 4px;\n\n  border: 2px solid lightblue;\n\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.875;\n`;\n","import PropTypes from 'prop-types';\nimport { FilterLabel, FilterInput } from './Filter.styles';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput type=\"text\" value={value} onChange={onChange}></FilterInput>\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Heading = styled.h2`\n  margin-bottom: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Heading } from './Title.styles';\n\nconst Title = ({ text }) => {\n  return <Heading>{text}</Heading>;\n};\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import styled from '@emotion/styled';\n\nexport const FormContainer = styled.div`\n  width: 100%;\n  max-width: 500px;\n  height: auto;\n\n  padding: 10px 20px;\n  margin: 10px auto;\n\n  box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.08),\n    0px 2px 2px rgba(0, 0, 0, 0.12);\n`;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactForm from './components/Form';\n\nimport ContactList from './components/ContactList';\n\nimport Filter from './components/Filter';\n\nimport Title from './components/Title';\n\nimport initialContacts from './data/contacts.json';\n\nimport { FormContainer } from './App.styles';\n\nexport default class App extends Component {\n  state = {\n    contacts: initialContacts,\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    if (\n      this.state.contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in the contact list`);\n      return;\n    }\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <FormContainer>\n        <Title text={'Phonebook'} />\n        <ContactForm onSubmit={this.addContact} />\n        <Title text={'Contacts'} />\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </FormContainer>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.querySelector('#root'),\r\n);\r\n"],"sourceRoot":""}